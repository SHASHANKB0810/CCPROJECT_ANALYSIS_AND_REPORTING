-- MakeMyTrip User Behavioral Analysis Database Setup for Supabase (PostgreSQL)
-- VERSION: 5 (Combined _b, _s, _q Schemas with Unique Naming)
-- MODIFIED: Explicit unique constraint and index names added/modified for _s and _q schemas.
-- GOAL: Allow all three table sets (_b, _s, _q) to coexist in the same schema.
-- Run this script in the Supabase SQL Editor for your project.
-- Tables will be created in the 'public' schema by default.

-- NOTE: Database creation/selection is handled by Supabase itself.

-- =============================================
-- DROP EXISTING OBJECTS (Views, Tables for _b, _s, _q)
-- =============================================

-- Drop views first (Only _b views were defined originally)
DROP VIEW IF EXISTS user_behavior_summary CASCADE;
DROP VIEW IF EXISTS booking_funnel_analysis CASCADE;
DROP VIEW IF EXISTS device_performance CASCADE;
DROP VIEW IF EXISTS popular_destinations CASCADE;

-- Drop tables (_q schema) - Reverse order or CASCADE
DROP TABLE IF EXISTS user_feedback_q CASCADE;
DROP TABLE IF EXISTS users_q CASCADE;

-- Drop tables (_s schema) - Reverse order or CASCADE
DROP TABLE IF EXISTS payments_s CASCADE;
DROP TABLE IF EXISTS traffic_sources_s CASCADE;
DROP TABLE IF EXISTS user_retention_s CASCADE;
DROP TABLE IF EXISTS user_feedback_s CASCADE;
DROP TABLE IF EXISTS user_events_s CASCADE;
DROP TABLE IF EXISTS sessions_s CASCADE;
DROP TABLE IF EXISTS users_s CASCADE;

-- Drop tables (_b schema) - Reverse order or CASCADE
DROP TABLE IF EXISTS payments_b CASCADE;
DROP TABLE IF EXISTS traffic_sources_b CASCADE;
DROP TABLE IF EXISTS user_retention_b CASCADE;
DROP TABLE IF EXISTS user_feedback_b CASCADE;
DROP TABLE IF EXISTS user_events_b CASCADE;
DROP TABLE IF EXISTS sessions_b CASCADE;
DROP TABLE IF EXISTS users_b CASCADE;


-- =============================================
-- SCHEMA SET 1: BEHAVIORAL (_b suffix)
-- (From Version 4 - Assumed correct)
-- =============================================

-- 1. USERS TABLE (users_b)
CREATE TABLE users_b (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL,
    created_at TIMESTAMPTZ NOT NULL,
    signup_source VARCHAR(100),
    country VARCHAR(100),
    city VARCHAR(100),
    device_type VARCHAR(50),
    os VARCHAR(100),
    browser VARCHAR(100),
    is_active BOOLEAN DEFAULT TRUE,
    CONSTRAINT unique_email_b UNIQUE (email) -- Explicit unique constraint name
);
CREATE INDEX idx_users_created_at_b ON users_b (created_at);
CREATE INDEX idx_users_country_b ON users_b (country);

-- 2. SESSIONS TABLE (sessions_b)
CREATE TABLE sessions_b (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    session_start TIMESTAMPTZ NOT NULL,
    session_end TIMESTAMPTZ NOT NULL,
    CONSTRAINT fk_sessions_user_b FOREIGN KEY (user_id) REFERENCES users_b(id) ON DELETE CASCADE -- Explicit FK constraint name
);
CREATE INDEX idx_session_user_id_b ON sessions_b (user_id);
CREATE INDEX idx_session_time_b ON sessions_b (session_start, session_end);

-- 3. USER EVENTS TABLE (user_events_b)
CREATE TABLE user_events_b (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    event_type VARCHAR(100) NOT NULL,
    event_time TIMESTAMPTZ NOT NULL,
    metadata JSONB,
    CONSTRAINT fk_events_user_b FOREIGN KEY (user_id) REFERENCES users_b(id) ON DELETE CASCADE -- Explicit FK constraint name
);
CREATE INDEX idx_event_user_id_b ON user_events_b (user_id);
CREATE INDEX idx_event_time_b ON user_events_b (event_time);
CREATE INDEX idx_event_type_b ON user_events_b (event_type);
CREATE INDEX idx_event_metadata_gin_b ON user_events_b USING GIN (metadata); -- GIN index for JSONB

-- 4. USER FEEDBACK TABLE (user_feedback_b)
CREATE TABLE user_feedback_b (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    feedback_text TEXT,
    rating INT, -- Removed CHECK constraint here to match original _b intention, add if needed
    submitted_at TIMESTAMPTZ NOT NULL,
    context VARCHAR(100),
    CONSTRAINT fk_feedback_user_b FOREIGN KEY (user_id) REFERENCES users_b(id) ON DELETE CASCADE, -- Explicit FK constraint name
    CONSTRAINT check_rating_b CHECK (rating BETWEEN 1 AND 5) -- Explicit Check constraint name
);
CREATE INDEX idx_feedback_user_id_b ON user_feedback_b (user_id);
CREATE INDEX idx_submitted_at_b ON user_feedback_b (submitted_at);
CREATE INDEX idx_feedback_rating_b ON user_feedback_b (rating);

-- 5. USER RETENTION TABLE (user_retention_b)
CREATE TABLE user_retention_b (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cohort_date DATE NOT NULL,
    retention_day INT NOT NULL,
    active_users_count INT NOT NULL,
    CONSTRAINT unique_cohort_day_b UNIQUE (cohort_date, retention_day) -- Explicit unique constraint name
);
CREATE INDEX idx_cohort_retention_b ON user_retention_b (cohort_date, retention_day);

-- 6. TRAFFIC SOURCES TABLE (traffic_sources_b)
CREATE TABLE traffic_sources_b (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    session_id INT,
    source VARCHAR(100),
    campaign VARCHAR(100),
    medium VARCHAR(100),
    term VARCHAR(100),
    content VARCHAR(100),
    tracked_at TIMESTAMPTZ NOT NULL,
    CONSTRAINT fk_traffic_user_b FOREIGN KEY (user_id) REFERENCES users_b(id) ON DELETE CASCADE, -- Explicit FK constraint name
    CONSTRAINT fk_traffic_session_b FOREIGN KEY (session_id) REFERENCES sessions_b(id) ON DELETE SET NULL -- Explicit FK constraint name
);
CREATE INDEX idx_traffic_user_id_b ON traffic_sources_b (user_id);
CREATE INDEX idx_traffic_source_medium_b ON traffic_sources_b (source, medium);
CREATE INDEX idx_tracked_at_b ON traffic_sources_b (tracked_at);

-- 7. PAYMENTS TABLE (payments_b)
CREATE TABLE payments_b (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    booking_id VARCHAR(100), -- Removed UNIQUE constraint to match original _b intent, add if needed
    amount DECIMAL(10,2) NOT NULL,
    currency VARCHAR(3) NOT NULL,
    payment_date TIMESTAMPTZ NOT NULL,
    payment_status VARCHAR(50) NOT NULL,
    product_type VARCHAR(50),
    CONSTRAINT fk_payments_user_b FOREIGN KEY (user_id) REFERENCES users_b(id) ON DELETE CASCADE, -- Explicit FK constraint name
    CONSTRAINT unique_booking_id_b UNIQUE (booking_id) -- Added explicit unique constraint name if needed
);
CREATE INDEX idx_payment_user_id_b ON payments_b (user_id);
CREATE INDEX idx_payment_date_b ON payments_b (payment_date);
CREATE INDEX idx_payment_product_type_b ON payments_b (product_type);

-- =============================================
-- SCHEMA SET 2: SIMPLIFIED (_s suffix)
-- (Added explicit constraints and indexes with _s suffix)
-- =============================================

-- 1. USERS TABLE (users_s)
CREATE TABLE users_s (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually users_s_pkey
    email VARCHAR(255),
    username VARCHAR(255),
    created_at TIMESTAMP,
    signup_source VARCHAR(100),
    country VARCHAR(100),
    city VARCHAR(100),
    device_type VARCHAR(50),
    os VARCHAR(100),
    browser VARCHAR(100),
    is_active BOOLEAN DEFAULT TRUE,
    CONSTRAINT unique_email_s UNIQUE (email) -- Explicit unique constraint name
);
CREATE INDEX idx_users_created_at_s ON users_s (created_at);
CREATE INDEX idx_users_country_s ON users_s (country);

-- 2. SESSIONS TABLE (sessions_s)
CREATE TABLE sessions_s (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually sessions_s_pkey
    user_id INT,
    session_start TIMESTAMP,
    session_end TIMESTAMP,
    CONSTRAINT fk_sessions_user_s FOREIGN KEY (user_id) REFERENCES users_s(id) ON DELETE SET NULL -- Explicit FK constraint name, SET NULL default
);
CREATE INDEX idx_session_user_id_s ON sessions_s (user_id);
CREATE INDEX idx_session_time_s ON sessions_s (session_start, session_end);

-- 3. USER EVENTS TABLE (user_events_s)
CREATE TABLE user_events_s (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually user_events_s_pkey
    user_id INT,
    event_type VARCHAR(100),
    event_time TIMESTAMP,
    metadata JSONB,
    CONSTRAINT fk_events_user_s FOREIGN KEY (user_id) REFERENCES users_s(id) ON DELETE SET NULL -- Explicit FK constraint name
);
CREATE INDEX idx_event_user_id_s ON user_events_s (user_id);
CREATE INDEX idx_event_time_s ON user_events_s (event_time);
CREATE INDEX idx_event_type_s ON user_events_s (event_type);
-- Optional GIN index for JSONB if needed for _s schema
-- CREATE INDEX idx_event_metadata_gin_s ON user_events_s USING GIN (metadata);

-- 4. USER FEEDBACK TABLE (user_feedback_s)
CREATE TABLE user_feedback_s (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually user_feedback_s_pkey
    user_id INT,
    feedback_text TEXT,
    rating INT,
    submitted_at TIMESTAMP,
    CONSTRAINT fk_feedback_user_s FOREIGN KEY (user_id) REFERENCES users_s(id) ON DELETE SET NULL, -- Explicit FK constraint name
    CONSTRAINT check_rating_s CHECK (rating BETWEEN 1 AND 5) -- Added explicit check constraint name
);
CREATE INDEX idx_feedback_user_id_s ON user_feedback_s (user_id);
CREATE INDEX idx_submitted_at_s ON user_feedback_s (submitted_at);

-- 5. USER RETENTION TABLE (user_retention_s)
CREATE TABLE user_retention_s (
    -- id SERIAL PRIMARY KEY, -- Optionally add a surrogate key if needed
    cohort_date DATE NOT NULL,
    active_date DATE NOT NULL,
    users_count INT,
    CONSTRAINT unique_cohort_active_date_s UNIQUE (cohort_date, active_date) -- Added explicit unique constraint
);
CREATE INDEX idx_cohort_retention_s ON user_retention_s (cohort_date, active_date);

-- 6. TRAFFIC SOURCES TABLE (traffic_sources_s)
CREATE TABLE traffic_sources_s (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually traffic_sources_s_pkey
    user_id INT,
    source VARCHAR(100),
    campaign VARCHAR(100),
    medium VARCHAR(100),
    tracked_at TIMESTAMP,
    CONSTRAINT fk_traffic_user_s FOREIGN KEY (user_id) REFERENCES users_s(id) ON DELETE SET NULL -- Explicit FK constraint name
);
CREATE INDEX idx_traffic_user_id_s ON traffic_sources_s (user_id);
CREATE INDEX idx_traffic_source_medium_s ON traffic_sources_s (source, medium);
CREATE INDEX idx_tracked_at_s ON traffic_sources_s (tracked_at);

-- 7. PAYMENTS TABLE (payments_s)
CREATE TABLE payments_s (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually payments_s_pkey
    user_id INT,
    amount DECIMAL(10,2),
    currency VARCHAR(10),
    payment_date TIMESTAMP,
    plan_type VARCHAR(100),
    CONSTRAINT fk_payments_user_s FOREIGN KEY (user_id) REFERENCES users_s(id) ON DELETE SET NULL -- Explicit FK constraint name
);
CREATE INDEX idx_payment_user_id_s ON payments_s (user_id);
CREATE INDEX idx_payment_date_s ON payments_s (payment_date);


-- =============================================
-- SCHEMA SET 3: FEEDBACK FOCUSED (_q suffix)
-- (Modified explicit constraints and indexes with _q suffix)
-- =============================================

-- 1. USERS TABLE (users_q)
CREATE TABLE users_q (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually users_q_pkey
    email VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    country VARCHAR(100),
    city VARCHAR(100),
    is_active BOOLEAN DEFAULT TRUE,
    CONSTRAINT unique_email_q UNIQUE (email) -- Renamed constraint
);
CREATE INDEX idx_users_created_at_q ON users_q (created_at);
CREATE INDEX idx_users_country_q ON users_q (country);

-- 2. USER FEEDBACK TABLE (user_feedback_q)
CREATE TABLE user_feedback_q (
    id SERIAL PRIMARY KEY, -- Implicit PK constraint name usually user_feedback_q_pkey
    user_id INT NOT NULL,
    service_type VARCHAR(50) NOT NULL,
    location VARCHAR(100),
    feedback_text TEXT,
    rating INT CHECK (rating BETWEEN 1 AND 5), -- Check constraint doesn't need a globally unique name unless explicitly named
    submitted_at TIMESTAMP NOT NULL,
    booking_reference VARCHAR(100),
    sentiment_score DECIMAL(3,2),
    keywords JSONB,
    CONSTRAINT fk_feedback_user_q FOREIGN KEY (user_id) REFERENCES users_q(id) ON DELETE CASCADE -- Renamed constraint
);
-- Renamed indexes
CREATE INDEX idx_feedback_submitted_at_q ON user_feedback_q(submitted_at);
CREATE INDEX idx_feedback_service_type_q ON user_feedback_q(service_type);
CREATE INDEX idx_feedback_location_q ON user_feedback_q(location);
CREATE INDEX idx_feedback_user_id_q ON user_feedback_q(user_id);
CREATE INDEX idx_feedback_keywords_gin_q ON user_feedback_q USING GIN (keywords); -- Added GIN index


-- =============================================
-- POPULATE TABLES WITH SAMPLE DATA (_b)
-- =============================================
-- (Using data from Version 4 for _b tables)
INSERT INTO users_b (email, username, created_at, signup_source, country, city, device_type, os, browser) VALUES
('alice@example.com', 'alice', NOW() - INTERVAL '10 day', 'organic', 'USA', 'New York', 'mobile', 'iOS', 'Safari'),
('bob@example.com', 'bob', NOW() - INTERVAL '5 day', 'referral', 'Canada', 'Toronto', 'desktop', 'Windows', 'Chrome'),
('carol@example.com', 'carol', NOW() - INTERVAL '2 day', 'ads', 'UK', 'London', 'tablet', 'Android', 'Firefox'),
('dave@example.com', 'dave', NOW() - INTERVAL '15 day', 'organic', 'USA', 'Austin', 'desktop', 'macOS', 'Chrome'),
('emma@example.com', 'emma', NOW() - INTERVAL '7 day', 'email_campaign', 'India', 'Mumbai', 'mobile', 'Android', 'Chrome'),
('frank@example.com', 'frank', NOW() - INTERVAL '1 day', 'referral', 'Germany', 'Berlin', 'tablet', 'iOS', 'Safari'),
('gina@example.com', 'gina', NOW() - INTERVAL '12 day', 'organic', 'USA', 'Chicago', 'mobile', 'Android', 'Chrome'),
('hank@example.com', 'hank', NOW() - INTERVAL '9 day', 'ads', 'UK', 'Manchester', 'desktop', 'Windows', 'Edge'),
('ian@example.com', 'ian', NOW() - INTERVAL '20 day', 'referral', 'Canada', 'Vancouver', 'tablet', 'iOS', 'Safari'),
('jane@example.com', 'jane', NOW() - INTERVAL '3 day', 'email_campaign', 'Germany', 'Hamburg', 'mobile', 'Android', 'Firefox'),
('kyle@example.com', 'kyle', NOW() - INTERVAL '1 day', 'organic', 'India', 'Delhi', 'desktop', 'Linux', 'Chrome'),
('lisa@example.com', 'lisa', NOW() - INTERVAL '8 day', 'organic', 'Australia', 'Sydney', 'mobile', 'iOS', 'Safari'),
('mike@example.com', 'mike', NOW() - INTERVAL '14 day', 'ads', 'France', 'Paris', 'desktop', 'Windows', 'Firefox'),
('nina@example.com', 'nina', NOW() - INTERVAL '6 day', 'referral', 'Japan', 'Tokyo', 'tablet', 'Android', 'Chrome'),
('oliver@example.com', 'oliver', NOW() - INTERVAL '4 day', 'organic', 'Brazil', 'Rio', 'mobile', 'Android', 'Samsung Internet'),
('paul@example.com', 'paul', NOW() - INTERVAL '11 day', 'ads', 'Spain', 'Madrid', 'desktop', 'macOS', 'Safari'),
('quincy@example.com', 'quincy', NOW() - INTERVAL '3 day', 'organic', 'South Africa', 'Cape Town', 'mobile', 'iOS', 'Chrome'),
('rachel@example.com', 'rachel', NOW() - INTERVAL '7 day', 'email_campaign', 'Mexico', 'Mexico City', 'tablet', 'Android', 'Firefox');

INSERT INTO sessions_b (user_id, session_start, session_end) VALUES
(1, NOW() - INTERVAL '2 hour', NOW() - INTERVAL '1 hour'),(2, NOW() - INTERVAL '1 day', NOW() - INTERVAL '23 hour'),
(3, NOW() - INTERVAL '3 hour', NOW() - INTERVAL '2 hour'),(1, NOW() - INTERVAL '12 hour', NOW() - INTERVAL '11 hour'),
(4, NOW() - INTERVAL '1 day', NOW() - INTERVAL '23 hour'),(5, NOW() - INTERVAL '5 hour', NOW() - INTERVAL '4 hour'),
(6, NOW() - INTERVAL '2 hour', NOW()),(7, NOW() - INTERVAL '6 hour', NOW() - INTERVAL '5 hour'),
(8, NOW() - INTERVAL '10 hour', NOW() - INTERVAL '9 hour'),(9, NOW() - INTERVAL '1 day', NOW() - INTERVAL '22 hour'),
(10, NOW() - INTERVAL '4 hour', NOW() - INTERVAL '3 hour'),(11, NOW() - INTERVAL '2 hour', NOW() - INTERVAL '1 hour'),
(12, NOW() - INTERVAL '8 hour', NOW() - INTERVAL '7 hour'),(13, NOW() - INTERVAL '5 hour', NOW() - INTERVAL '4 hour'),
(14, NOW() - INTERVAL '3 day', NOW() - INTERVAL '2 day' + INTERVAL '23 hour'),(15, NOW() - INTERVAL '7 hour', NOW() - INTERVAL '6 hour'),
(16, NOW() - INTERVAL '9 hour', NOW() - INTERVAL '8 hour'),(17, NOW() - INTERVAL '4 hour', NOW() - INTERVAL '3 hour'),
(18, NOW() - INTERVAL '6 hour', NOW() - INTERVAL '5 hour');

INSERT INTO user_events_b (user_id, event_type, event_time, metadata) VALUES
(1, 'search_flight', NOW() - INTERVAL '89 minute', '{"origin": "NYC", "destination": "LAX", "departure_date": "2025-05-15", "return_date": "2025-05-22", "class": "economy"}'::jsonb),
(1, 'view_flight', NOW() - INTERVAL '87 minute', '{"flight_id": "DL123", "price": 299.99, "airline": "Delta"}'::jsonb),
(1, 'click_book', NOW() - INTERVAL '85 minute', '{"flight_id": "DL123", "action": "initiated"}'::jsonb),
(1, 'abandon_booking', NOW() - INTERVAL '84 minute', '{"flight_id": "DL123", "reason": "price_too_high"}'::jsonb),
(2, 'search_hotel', NOW() - INTERVAL '22 hour', '{"location": "Toronto", "check_in": "2025-04-20", "check_out": "2025-04-25", "guests": 2}'::jsonb),
(2, 'view_hotel', NOW() - INTERVAL '21 hour', '{"hotel_id": "H789", "name": "Toronto Grand", "price": 199.99}'::jsonb),
(2, 'compare_hotel', NOW() - INTERVAL '20 hour' + INTERVAL '30 minute', '{"hotel_ids": ["H789", "H123"]}'::jsonb),
(2, 'book_hotel', NOW() - INTERVAL '20 hour', '{"hotel_id": "H789", "amount": 199.99, "status": "initiated"}'::jsonb),
(3, 'search_package', NOW() - INTERVAL '2 hour', '{"destination": "London", "duration": "7_days", "budget": 1500}'::jsonb),
(3, 'view_package', NOW() - INTERVAL '1 hour' + INTERVAL '50 minute', '{"package_id": "P456", "price": 1299.99}'::jsonb),
(3, 'wishlist_add', NOW() - INTERVAL '1 hour' + INTERVAL '40 minute', '{"item_type": "package", "item_id": "P456"}'::jsonb),
(4, 'search_flight', NOW() - INTERVAL '1 day', '{"origin": "AUS", "destination": "JFK", "departure_date": "2025-06-10"}'::jsonb),
(4, 'view_flight', NOW() - INTERVAL '1 day', '{"flight_id": "AA456", "price": 349.99}'::jsonb),
(5, 'search_hotel', NOW() - INTERVAL '5 hour', '{"location": "Mumbai", "check_in": "2025-05-01"}'::jsonb),
(5, 'book_hotel', NOW() - INTERVAL '4 hour', '{"hotel_id": "H321", "amount": 89.99, "status": "initiated"}'::jsonb),
(6, 'search_car', NOW() - INTERVAL '2 hour', '{"location": "Berlin", "pickup_date": "2025-04-15"}'::jsonb),
(6, 'book_car', NOW() - INTERVAL '1 hour', '{"car_id": "C789", "amount": 45.99, "status": "initiated"}'::jsonb),
(7, 'search_activity', NOW() - INTERVAL '6 hour', '{"location": "Chicago", "date": "2025-07-04"}'::jsonb),
(8, 'book_activity', NOW() - INTERVAL '8 hour', '{"activity_id": "A123", "amount": 29.99, "status": "initiated"}'::jsonb),
(9, 'cancel_booking_request', NOW() - INTERVAL '1 day', '{"booking_type": "hotel", "booking_id": "BH123"}'::jsonb),
(10, 'apply_filter', NOW() - INTERVAL '3 hour', '{"page": "flight_search", "filter_type": "price_range", "min": 100, "max": 200}'::jsonb),
(11, 'sort_results', NOW() - INTERVAL '2 hour', '{"page": "hotel_search", "sort_by": "price", "order": "asc"}'::jsonb),
(12, 'login', NOW() - INTERVAL '1 hour', '{}'::jsonb),
(12, 'search_flight', NOW() - INTERVAL '55 minute', '{"origin": "DEL", "destination": "BOM"}'::jsonb),
(13, 'view_deal', NOW() - INTERVAL '3 hour', '{"deal_id": "D456", "discount": 20, "type": "hotel"}'::jsonb),
(14, 'share_deal', NOW() - INTERVAL '2 hour', '{"deal_id": "D456", "platform": "whatsapp"}'::jsonb),
(15, 'repeat_search', NOW() - INTERVAL '1 hour', '{"previous_search_id": "S789", "search_type": "flight"}'::jsonb),
(16, 'search_train', NOW() - INTERVAL '4 hour', '{"origin": "MAD", "destination": "BCN", "date": "2025-05-10"}'::jsonb),
(17, 'book_train', NOW() - INTERVAL '3 hour', '{"train_id": "T789", "amount": 35.50, "status": "initiated"}'::jsonb),
(18, 'search_bus', NOW() - INTERVAL '5 hour', '{"origin": "CPH", "destination": "AAR", "date": "2025-06-15"}'::jsonb);

INSERT INTO user_feedback_b (user_id, feedback_text, rating, submitted_at, context) VALUES
(1, 'Searching flights was easy, but prices felt high.', 4, NOW() - INTERVAL '1 day', 'flight_search'),
(2, 'Hotel booking worked perfectly!', 5, NOW() - INTERVAL '20 hour', 'hotel_booking'),
(3, 'App interface is confusing.', 2, NOW() - INTERVAL '6 hour', 'app_experience'),
(4, 'Love the new dashboard design!', 5, NOW() - INTERVAL '1 day', 'website_ui'),
(5, 'It took a while to load hotel options.', 3, NOW() - INTERVAL '12 hour', 'hotel_search'),
(6, 'Checkout process was smooth and fast.', 4, NOW() - INTERVAL '30 minute', 'website_checkout'),
(7, 'Helpful travel guides!', 5, NOW() - INTERVAL '5 day', 'content'),
(8, 'Found some bugs during package search.', 2, NOW() - INTERVAL '2 day', 'package_search'),
(9, 'Mobile app could be more responsive.', 3, NOW() - INTERVAL '22 hour', 'app_experience'),
(10, 'Love the filter options!', 5, NOW() - INTERVAL '2 hour', 'flight_search'),
(11, 'App crashed when trying to compare hotels.', 2, NOW() - INTERVAL '1 hour', 'app_experience'),
(12, 'Excellent customer service chat.', 5, NOW() - INTERVAL '8 hour', 'support'),
(13, 'Too many promotional popups.', 2, NOW() - INTERVAL '5 hour', 'website_ui'),
(14, 'Best travel app I have used!', 5, NOW() - INTERVAL '3 hour', 'app_experience'),
(15, 'Could use more payment options like UPI.', 3, NOW() - INTERVAL '1 hour', 'website_checkout'),
(16, 'Very intuitive interface for train booking.', 4, NOW() - INTERVAL '4 hour', 'train_booking'),
(17, 'Had issues applying a promo code.', 2, NOW() - INTERVAL '3 hour', 'website_checkout'),
(18, 'Great deals found on hotels!', 4, NOW() - INTERVAL '5 hour', 'hotel_search');

INSERT INTO user_retention_b (cohort_date, retention_day, active_users_count) VALUES
('2025-03-25', 1, 100),('2025-03-25', 2, 80),('2025-03-25', 7, 60),
('2025-03-28', 1, 90),('2025-03-28', 2, 70),('2025-03-28', 7, 55),
('2025-03-30', 1, 110),('2025-03-30', 2, 90),('2025-03-30', 7, 65),
('2025-04-01', 1, 120),('2025-04-01', 3, 75),('2025-04-01', 7, 60),
('2025-04-05', 1, 95),('2025-04-05', 2, 85),('2025-04-05', 7, 70),
('2025-04-08', 1, 105),('2025-04-08', 3, 80),('2025-04-08', 7, 60);

-- Use session IDs 1-18 for traffic sources link
INSERT INTO traffic_sources_b (user_id, session_id, source, campaign, medium, term, content, tracked_at) VALUES
(1, 1, 'Google', 'spring_sale_nyc', 'organic', 'flights to lax', NULL, NOW() - INTERVAL '10 day'),
(2, 2, 'Facebook', 'toronto_hotel_deals', 'cpc', NULL, 'video_ad_1', NOW() - INTERVAL '5 day'),
(3, 3, 'Google', 'uk_package_holidays', 'cpc', 'london packages', 'ad_variant_b', NOW() - INTERVAL '2 day'),
(4, 4, 'Direct', NULL, NULL, NULL, NULL, NOW() - INTERVAL '15 day'), -- Corrected session ID assumption
(5, 5, 'Email', 'mumbai_monsoon_sale', 'email', NULL, 'newsletter_button', NOW() - INTERVAL '7 day'), -- Corrected session ID assumption
(6, 6, 'Referral', 'travel_blogger_promo', 'referral', NULL, 'berlin_link', NOW() - INTERVAL '1 day'), -- Corrected session ID assumption
(7, 7, 'Google', NULL, 'organic', 'cheap hotels chicago', NULL, NOW() - INTERVAL '12 day'),
(8, 8, 'Instagram', 'uk_getaway_ads', 'cpc', NULL, 'story_ad_manchester', NOW() - INTERVAL '9 day'),
(9, 9, 'Referral', 'friend_invite_link', 'referral', NULL, NULL, NOW() - INTERVAL '20 day'),
(10, 10, 'Email', 'german_city_breaks', 'email', NULL, 'hamburg_special', NOW() - INTERVAL '3 day'),
(11, 11, 'Google', NULL, 'organic', 'book flight india domestic', NULL, NOW() - INTERVAL '1 day'),
(12, 12, 'Direct', NULL, NULL, NULL, NULL, NOW() - INTERVAL '8 day'),
(13, 13, 'Pinterest', 'europe_summer_pins', 'social', 'paris travel inspiration', 'pin_image_3', NOW() - INTERVAL '14 day'),
(14, 14, 'Facebook', 'tokyo_olympics_travel', 'cpc', NULL, 'carousel_ad_flights', NOW() - INTERVAL '6 day'),
(15, 15, 'Google', 'brazil_carnival', 'cpc', 'rio hotel deals', 'text_ad_1', NOW() - INTERVAL '4 day'),
(16, 16, 'Google', 'spain_flights', 'cpc', 'madrid flight booking', 'search_ad_top', NOW() - INTERVAL '11 day'),
(17, 17, 'Direct', NULL, NULL, NULL, NULL, NOW() - INTERVAL '3 day'),
(18, 18, 'Email', 'mexico_all_inclusive', 'email', NULL, 'cta_book_now', NOW() - INTERVAL '7 day');


INSERT INTO payments_b (user_id, booking_id, amount, currency, payment_date, payment_status, product_type) VALUES
(2, 'MMTH789BOOK1', 199.99, 'CAD', NOW() - INTERVAL '20 hour' + INTERVAL '5 minute', 'completed', 'hotel'),
(5, 'MMTH321BOOK1', 89.99, 'INR', NOW() - INTERVAL '4 hour' + INTERVAL '2 minute', 'completed', 'hotel'),
(6, 'MMTC789BOOK1', 45.99, 'EUR', NOW() - INTERVAL '1 hour' + INTERVAL '3 minute', 'completed', 'car_rental'),
(8, 'MMTA123BOOK1', 29.99, 'GBP', NOW() - INTERVAL '8 hour' + INTERVAL '1 minute', 'completed', 'activity'),
(17, 'MMTT789BOOK1', 35.50, 'EUR', NOW() - INTERVAL '3 hour' + INTERVAL '4 minute', 'completed', 'train'),
(1, 'MMTFLDL123TRY1', 299.99, 'USD', NOW() - INTERVAL '84 minute' + INTERVAL '10 second', 'failed', 'flight'),
(3, 'MMTPKG456BOOK1', 1299.99, 'GBP', NOW() - INTERVAL '1 hour', 'completed', 'package');


-- =============================================
-- POPULATE TABLES WITH SAMPLE DATA (_s)
-- =============================================
-- (Using data provided in original script for _s tables)
-- NOTE: Assuming user IDs 1-11 are generated sequentially for users_s for FK references. Adjust if needed.
INSERT INTO users_s (email, username, created_at, signup_source, country, city, device_type, os, browser) VALUES
('alice@example.com', 'alice', NOW() - INTERVAL '10 days', 'organic', 'USA', 'New York', 'mobile', 'iOS', 'Safari'),
('bob@example.com', 'bob', NOW() - INTERVAL '5 days', 'referral', 'Canada', 'Toronto', 'desktop', 'Windows', 'Chrome'),
('carol@example.com', 'carol', NOW() - INTERVAL '2 days', 'ads', 'UK', 'London', 'tablet', 'Android', 'Firefox'),
('dave@example.com', 'dave', NOW() - INTERVAL '15 days', 'organic', 'USA', 'Austin', 'desktop', 'macOS', 'Chrome'),
('emma@example.com', 'emma', NOW() - INTERVAL '7 days', 'email_campaign', 'India', 'Mumbai', 'mobile', 'Android', 'Chrome'),
('frank@example.com', 'frank', NOW() - INTERVAL '1 day', 'referral', 'Germany', 'Berlin', 'tablet', 'iOS', 'Safari'),
('gina@example.com', 'gina', NOW() - INTERVAL '12 days', 'organic', 'USA', 'Chicago', 'mobile', 'Android', 'Chrome'),
('hank@example.com', 'hank', NOW() - INTERVAL '9 days', 'ads', 'UK', 'Manchester', 'desktop', 'Windows', 'Edge'),
('ian@example.com', 'ian', NOW() - INTERVAL '20 days', 'referral', 'Canada', 'Vancouver', 'tablet', 'iOS', 'Safari'),
('jane@example.com', 'jane', NOW() - INTERVAL '3 days', 'email_campaign', 'Germany', 'Hamburg', 'mobile', 'Android', 'Firefox'),
('kyle@example.com', 'kyle', NOW() - INTERVAL '1 day', 'organic', 'India', 'Delhi', 'desktop', 'Linux', 'Chrome');

INSERT INTO sessions_s (user_id, session_start, session_end) VALUES
(1, NOW() - INTERVAL '2 hours', NOW() - INTERVAL '1 hour'),(2, NOW() - INTERVAL '1 day', NOW() - INTERVAL '23 hours'),
(3, NOW() - INTERVAL '3 hours', NOW() - INTERVAL '2 hours'),(1, NOW() - INTERVAL '12 hours', NOW() - INTERVAL '11 hours'),
(4, NOW() - INTERVAL '1 day', NOW() - INTERVAL '23 hours'),(5, NOW() - INTERVAL '5 hours', NOW() - INTERVAL '4 hours'),
(6, NOW() - INTERVAL '2 hours', NOW()),(7, NOW() - INTERVAL '6 hours', NOW() - INTERVAL '5 hours'),
(8, NOW() - INTERVAL '10 hours', NOW() - INTERVAL '9 hours'),(9, NOW() - INTERVAL '1 day', NOW() - INTERVAL '22 hours'),
(10, NOW() - INTERVAL '4 hours', NOW() - INTERVAL '3 hours'),(11, NOW() - INTERVAL '2 hours', NOW() - INTERVAL '1 hour');

INSERT INTO user_events_s (user_id, event_type, event_time, metadata) VALUES
(1, 'page_view', NOW() - INTERVAL '90 minutes', '{"page": "/home"}'),
(1, 'click_button', NOW() - INTERVAL '88 minutes', '{"button": "signup"}'),
(2, 'purchase', NOW() - INTERVAL '20 hours', '{"amount": 49.99, "currency": "USD"}'),
(4, 'page_view', NOW() - INTERVAL '23 hours', '{"page": "/dashboard"}'),
(5, 'click_button', NOW() - INTERVAL '4 hours', '{"button": "buy-now"}'),
(5, 'page_view', NOW() - INTERVAL '3 hours', '{"page": "/pricing"}'),
(6, 'login', NOW() - INTERVAL '2 hours', '{}'),
(6, 'purchase', NOW() - INTERVAL '1 hour', '{"amount": 99.99, "currency": "USD"}'),
(7, 'page_view', NOW() - INTERVAL '5 hours', '{"page": "/pricing"}'),
(7, 'click_button', NOW() - INTERVAL '4 hours 58 minutes', '{"button": "start-trial"}'),
(8, 'login', NOW() - INTERVAL '9 hours', '{}'),
(8, 'purchase', NOW() - INTERVAL '8 hours', '{"amount": 59.99, "currency": "USD"}'),
(9, 'page_view', NOW() - INTERVAL '21 hours', '{"page": "/home"}');

INSERT INTO user_feedback_s (user_id, feedback_text, rating, submitted_at) VALUES
(1, 'Great experience!', 5, NOW() - INTERVAL '2 days'),(2, 'App is a bit slow to load.', 3, NOW() - INTERVAL '1 day'),
(3, 'Love the UI!', 4, NOW() - INTERVAL '6 hours'),(4, 'Love the new dashboard design!', 5, NOW() - INTERVAL '1 day'),
(5, 'It took a while to load some pages.', 2, NOW() - INTERVAL '12 hours'),(6, 'Checkout process was smooth and fast.', 4, NOW() - INTERVAL '30 minutes'),
(7, 'Helpful tutorials!', 5, NOW() - INTERVAL '5 days'),(8, 'Found some bugs during checkout.', 2, NOW() - INTERVAL '2 days'),
(9, 'Interface could be more responsive.', 3, NOW() - INTERVAL '22 hours'),(10, 'Love the features!', 5, NOW() - INTERVAL '2 hours'),
(11, 'App crashed once, but otherwise great.', 4, NOW() - INTERVAL '1 hour');

INSERT INTO user_retention_s (cohort_date, active_date, users_count) VALUES
('2025-03-25', '2025-03-26', 100),('2025-03-25', '2025-03-27', 80),('2025-03-25', '2025-04-01', 60),
('2025-03-28', '2025-03-29', 90),('2025-03-28', '2025-03-30', 70),('2025-03-28', '2025-04-03', 55),
('2025-03-30', '2025-03-31', 110),('2025-03-30', '2025-04-01', 90),('2025-03-30', '2025-04-05', 65),
('2025-04-01', '2025-04-02', 120),('2025-04-01', '2025-04-04', 75);

INSERT INTO traffic_sources_s (user_id, source, campaign, medium, tracked_at) VALUES
(1, 'Google', 'spring_sale', 'organic', NOW() - INTERVAL '10 days'),(2, 'Facebook', 'ad_campaign_1', 'cpc', NOW() - INTERVAL '5 days'),
(3, 'Twitter', NULL, 'organic', NOW() - INTERVAL '2 days'),(4, 'LinkedIn', 'b2b_campaign', 'email', NOW() - INTERVAL '14 days'),
(5, 'YouTube', NULL, 'organic', NOW() - INTERVAL '6 days'),(6, 'Google', 'spring_ads', 'cpc', NOW() - INTERVAL '1 day'),
(7, 'Google', 'april_launch', 'organic', NOW() - INTERVAL '12 days'),(8, 'Instagram', 'ig_ads', 'cpc', NOW() - INTERVAL '9 days'),
(9, 'Twitter', NULL, 'organic', NOW() - INTERVAL '20 days'),(10, 'LinkedIn', 'enterprise_push', 'email', NOW() - INTERVAL '3 days'),
(11, 'Reddit', NULL, 'organic', NOW() - INTERVAL '1 day');

INSERT INTO payments_s (user_id, amount, currency, payment_date, plan_type) VALUES
(2, 49.99, 'USD', NOW() - INTERVAL '20 hours', 'pro'),(3, 19.99, 'USD', NOW() - INTERVAL '3 hours', 'starter'),
(4, 99.99, 'USD', NOW() - INTERVAL '23 hours', 'enterprise'),(5, 29.99, 'INR', NOW() - INTERVAL '4 hours', 'basic'),
(6, 49.99, 'EUR', NOW() - INTERVAL '1 hour', 'pro'),(7, 19.99, 'USD', NOW() - INTERVAL '5 hours', 'starter'),
(8, 49.99, 'USD', NOW() - INTERVAL '8 hours', 'pro'),(9, 29.99, 'CAD', NOW() - INTERVAL '1 day', 'basic'),
(10, 99.99, 'EUR', NOW() - INTERVAL '2 hours', 'enterprise'),(11, 39.99, 'INR', NOW() - INTERVAL '1 hour', 'starter');


-- =============================================
-- POPULATE TABLES WITH SAMPLE DATA (_q)
-- =============================================
-- (Using data provided in original script for _q tables)
-- NOTE: Assuming user IDs 1-85 are generated sequentially for users_q for FK references. Adjust if needed.
INSERT INTO users_q (email, username, created_at, country, city, is_active) VALUES
('alice.johnson@example.com', 'alicej', '2023-01-15 09:23:45', 'USA', 'New York', TRUE),
('bob.smith@example.com', 'bobsmith', '2023-02-03 14:12:33', 'UK', 'London', TRUE),
('carol.williams@example.com', 'carolw', '2023-02-18 11:45:21', 'Canada', 'Toronto', TRUE),
('david.brown@example.com', 'davidb', '2023-03-05 16:30:15', 'Australia', 'Sydney', FALSE),
('emma.davis@example.com', 'emmad', '2023-03-22 08:15:42', 'Germany', 'Berlin', TRUE),
('frank.miller@example.com', 'frankm', '2023-04-10 13:22:18', 'France', 'Paris', TRUE),
('grace.wilson@example.com', 'gracew', '2023-04-28 10:05:37', 'Japan', 'Tokyo', FALSE),
('henry.moore@example.com', 'henrym', '2023-05-12 17:40:29', 'India', 'Mumbai', TRUE),
('isabella.taylor@example.com', 'isabellat', '2023-05-30 12:18:54', 'Brazil', 'Rio de Janeiro', TRUE),
('jack.anderson@example.com', 'jacka', '2023-06-08 09:33:11', 'South Africa', 'Cape Town', FALSE),
('katherine.thomas@example.com', 'katherinet', '2023-06-25 15:20:48', 'Spain', 'Madrid', TRUE),
('liam.jackson@example.com', 'liamj', '2023-07-14 11:45:22', 'Italy', 'Rome', TRUE),
('mia.white@example.com', 'miaw', '2023-08-02 14:30:19', 'Singapore', 'Singapore', TRUE),
('noah.harris@example.com', 'noahh', '2023-08-19 10:15:33', 'Netherlands', 'Amsterdam', FALSE),
('olivia.martin@example.com', 'oliviam', '2023-09-05 16:22:47', 'Switzerland', 'Zurich', TRUE),
('peter.clark@example.com', 'peterc', '2023-09-22 08:40:12', 'Sweden', 'Stockholm', TRUE),
('quincy.lewis@example.com', 'quincyl', '2023-10-10 13:55:28', 'Norway', 'Oslo', FALSE),
('rachel.lee@example.com', 'rachell', '2023-10-28 09:18:39', 'Denmark', 'Copenhagen', TRUE),
('samuel.walker@example.com', 'samuelw', '2023-11-15 17:30:44', 'Finland', 'Helsinki', TRUE),
('tina.hall@example.com', 'tinah', '2023-12-03 12:45:51', 'Belgium', 'Brussels', FALSE),
('ethan.young@example.com', 'ethany', '2023-12-10 08:22:15', 'Portugal', 'Lisbon', TRUE),
('ava.king@example.com', 'avak', '2023-12-18 14:35:42', 'Greece', 'Athens', TRUE),
('logan.wright@example.com', 'loganw', '2023-12-25 09:18:33', 'Austria', 'Vienna', FALSE),
('sophia.scott@example.com', 'sophias', '2024-01-05 11:40:19', 'Poland', 'Warsaw', TRUE),
('jacob.green@example.com', 'jacobg', '2024-01-12 16:25:47', 'Hungary', 'Budapest', TRUE),
('amelia.adams@example.com', 'ameliaa', '2024-01-20 10:15:28', 'Czech Republic', 'Prague', FALSE),
('michael.baker@example.com', 'michaelb', '2024-01-28 13:50:22', 'Ireland', 'Dublin', TRUE),
('charlotte.nelson@example.com', 'charlotten', '2024-02-05 17:30:45', 'Argentina', 'Buenos Aires', TRUE),
('benjamin.carter@example.com', 'benjaminc', '2024-02-15 08:45:11', 'Chile', 'Santiago', FALSE),
('harper.mitchell@example.com', 'harperm', '2024-02-22 12:20:36', 'Peru', 'Lima', TRUE),
('william.perez@example.com', 'williamp', '2024-03-01 15:10:24', 'Colombia', 'Bogota', TRUE),
('emily.roberts@example.com', 'emilyr', '2024-03-10 09:35:18', 'Venezuela', 'Caracas', FALSE),
('alexander.turner@example.com', 'alexandert', '2024-03-18 14:25:33', 'Malaysia', 'Kuala Lumpur', TRUE),
('abigail.phillips@example.com', 'abigailp', '2024-03-25 11:15:47', 'Thailand', 'Bangkok', TRUE),
('james.campbell@example.com', 'jamesc', '2024-04-02 16:40:29', 'Indonesia', 'Jakarta', FALSE),
('ella.parker@example.com', 'ellap', '2024-04-10 10:30:15', 'Philippines', 'Manila', TRUE),
('daniel.evans@example.com', 'daniele', '2024-04-18 13:20:42', 'Vietnam', 'Hanoi', TRUE),
('scarlett.edwards@example.com', 'scarlette', '2024-04-25 08:45:37', 'South Korea', 'Seoul', FALSE),
('joseph.collins@example.com', 'josephc', '2024-05-03 12:35:21', 'Taiwan', 'Taipei', TRUE),
('victoria.stewart@example.com', 'victorias', '2024-05-11 15:25:48', 'Hong Kong', 'Hong Kong', TRUE),
('samuel.sanchez@example.com', 'samuels', '2024-05-19 09:15:33', 'Macau', 'Macau', FALSE),
('zoey.morris@example.com', 'zoeym', '2024-05-27 14:05:27', 'Israel', 'Jerusalem', TRUE),
('david.rogers@example.com', 'davidr', '2024-06-04 17:50:19', 'Egypt', 'Cairo', TRUE),
('penelope.reed@example.com', 'peneloper', '2024-06-12 10:40:45', 'Turkey', 'Istanbul', FALSE),
('andrew.cook@example.com', 'andrewc', '2024-06-20 13:30:22', 'Saudi Arabia', 'Riyadh', TRUE),
('lily.morgan@example.com', 'lilym', '2024-06-28 08:20:36', 'UAE', 'Dubai', TRUE),
('ryan.bell@example.com', 'ryanb', '2024-07-06 11:10:14', 'Qatar', 'Doha', FALSE),
('hannah.murphy@example.com', 'hannahm', '2024-07-14 15:55:28', 'Kuwait', 'Kuwait City', TRUE),
('matthew.bailey@example.com', 'matthewb', '2024-07-22 09:45:33', 'Oman', 'Muscat', TRUE),
('addison.cooper@example.com', 'addisonc', '2024-07-30 12:35:47', 'Bahrain', 'Manama', FALSE),
('jackson.richardson@example.com', 'jacksonr', '2024-08-07 16:25:19', 'Jordan', 'Amman', TRUE),
('aubrey.cox@example.com', 'aubreyc', '2024-08-15 10:15:42', 'Lebanon', 'Beirut', TRUE),
('sebastian.howard@example.com', 'sebastianh', '2024-08-23 13:05:27', 'Morocco', 'Casablanca', FALSE),
('ellie.ward@example.com', 'elliew', '2024-08-31 08:55:33', 'Tunisia', 'Tunis', TRUE),
('aiden.torres@example.com', 'aident', '2024-09-08 12:45:18', 'Algeria', 'Algiers', TRUE),
('stella.peterson@example.com', 'stellap', '2024-09-16 15:35:42', 'Kenya', 'Nairobi', FALSE),
('luke.gray@example.com', 'lukeg', '2024-09-24 09:25:17', 'Nigeria', 'Lagos', TRUE),
('nora.ramirez@example.com', 'norar', '2024-10-02 13:15:39', 'Ghana', 'Accra', TRUE),
('jayden.james@example.com', 'jaydenj', '2024-10-10 08:05:24', 'Senegal', 'Dakar', FALSE),
('clara.watson@example.com', 'claraw', '2024-10-18 11:55:47', 'Tanzania', 'Dar es Salaam', TRUE),
('leo.brooks@example.com', 'leob', '2024-10-26 15:45:33', 'Uganda', 'Kampala', TRUE),
('violet.kelly@example.com', 'violetk', '2024-11-03 10:35:18', 'Rwanda', 'Kigali', FALSE),
('carter.sanders@example.com', 'carters', '2024-11-11 14:25:42', 'Ethiopia', 'Addis Ababa', TRUE),
('hazel.price@example.com', 'hazelp', '2024-11-19 09:15:27', 'Zambia', 'Lusaka', TRUE),
('gabriel.bennett@example.com', 'gabrielb', '2024-11-27 13:05:39', 'Zimbabwe', 'Harare', FALSE),
('lucy.wood@example.com', 'lucyw', '2024-12-05 16:55:24', 'Botswana', 'Gaborone', TRUE),
('julian.barnes@example.com', 'julianb', '2024-12-13 10:45:47', 'Namibia', 'Windhoek', TRUE),
('savannah.ross@example.com', 'savannahr', '2024-12-21 14:35:33', 'Mozambique', 'Maputo', FALSE),
('dylan.henderson@example.com', 'dylanh', '2024-12-29 09:25:18', 'Madagascar', 'Antananarivo', TRUE),
('piper.coleman@example.com', 'piperc', '2025-01-06 13:15:42', 'Mauritius', 'Port Louis', TRUE),
('nathan.jenkins@example.com', 'nathanj', '2025-01-14 08:05:27', 'Seychelles', 'Victoria', FALSE),
('riley.powell@example.com', 'rileyp', '2025-01-22 11:55:39', 'Fiji', 'Suva', TRUE),
('atlas.long@example.com', 'atlasl', '2025-01-30 15:45:24', 'Papua New Guinea', 'Port Moresby', TRUE),
('elena.hughes@example.com', 'elenah', '2025-02-07 10:35:47', 'New Zealand', 'Auckland', FALSE),
('theodore.flores@example.com', 'theodoref', '2025-02-15 14:25:33', 'Iceland', 'Reykjavik', TRUE),
('iris.washington@example.com', 'irisw', '2025-02-23 09:15:18', 'Malta', 'Valletta', TRUE),
('arjun.sharma@example.com', 'arjuns', '2025-03-03 11:45:22', 'India', 'Delhi', TRUE),
('priya.patel@example.com', 'priyap', '2025-03-11 14:35:47', 'India', 'Mumbai', FALSE),
('rahul.gupta@example.com', 'rahulg', '2025-03-19 09:25:33', 'India', 'Bangalore', TRUE),
('ananya.reddy@example.com', 'ananyar', '2025-03-27 13:15:18', 'India', 'Hyderabad', TRUE),
('vikram.singh@example.com', 'vikrams', '2025-04-04 16:05:42', 'India', 'Chennai', FALSE);

-- Sample user_feedback_q data (using user IDs 1-80 sequentially)
INSERT INTO user_feedback_q (user_id, service_type, location, feedback_text, rating, submitted_at) VALUES
(1, 'flights', 'New York', 'The flight was comfortable and on time. Crew was very professional.', 5, NOW() - INTERVAL '2 days'),
(2, 'flights', 'London', 'Excellent service! Premium economy was worth the upgrade.', 5, NOW() - INTERVAL '5 hours'),
(3, 'flights', 'Dubai', 'Lost my luggage and customer service was unhelpful.', 1, NOW() - INTERVAL '4 days'),
(4, 'flights', 'Singapore', 'Flight was okay but food options were limited.', 3, NOW() - INTERVAL '6 hours'),
(5, 'flights', 'Tokyo', 'Impeccable service and attention to detail.', 5, NOW() - INTERVAL '1 day'),
(6, 'flights', 'Paris', 'Seats were cramped but the entertainment system was great.', 4, NOW() - INTERVAL '3 days'),
(7, 'flights', 'Sydney', 'Flight delayed by 3 hours with no compensation.', 2, NOW() - INTERVAL '2 days'),
(8, 'flights', 'Hong Kong', 'Best business class experience Ive ever had!', 5, NOW() - INTERVAL '8 hours'),
(9, 'flights', 'Frankfurt', 'Lost my connection due to airline error.', 1, NOW() - INTERVAL '5 days'),
(10, 'flights', 'Toronto', 'Friendly crew made the long flight enjoyable.', 4, NOW() - INTERVAL '1 day'),
(11, 'hotels', 'Mumbai', 'Room was clean but AC issues.', 3, NOW() - INTERVAL '1 day'),
(12, 'hotels', 'Goa', 'Beautiful beachfront property!', 5, NOW() - INTERVAL '1 day'),
(13, 'hotels', 'Bangkok', 'Rude staff but excellent location.', 2, NOW() - INTERVAL '3 days'),
(14, 'hotels', 'New York', 'Central location with amazing views.', 5, NOW() - INTERVAL '4 hours'),
(15, 'hotels', 'Paris', 'Tiny room but very clean.', 3, NOW() - INTERVAL '2 days'),
(16, 'hotels', 'Rome', 'Historic building with modern amenities.', 5, NOW() - INTERVAL '1 day'),
(17, 'hotels', 'Istanbul', 'Bathroom was not properly cleaned.', 2, NOW() - INTERVAL '3 days'),
(18, 'hotels', 'Sydney', 'Perfect for business travelers.', 4, NOW() - INTERVAL '1 day'),
(19, 'hotels', 'Dubai', 'Overpriced for what you get.', 2, NOW() - INTERVAL '4 days'),
(20, 'hotels', 'Singapore', 'Best hotel breakfast ever!', 5, NOW() - INTERVAL '2 days'),
(21, 'trains', 'Delhi', 'Train was delayed and compartments dirty.', 2, NOW() - INTERVAL '3 days'),
(22, 'trains', 'Mumbai', 'Comfortable journey with good food.', 4, NOW() - INTERVAL '1 day'),
(23, 'trains', 'Tokyo', 'Spotless and incredibly punctual.', 5, NOW() - INTERVAL '2 days'),
(24, 'trains', 'Paris', 'Strike caused cancellation with no notice.', 1, NOW() - INTERVAL '4 days'),
(25, 'trains', 'London', 'First class was worth every penny.', 5, NOW() - INTERVAL '3 hours'),
(26, 'trains', 'Berlin', 'Clean but seats were uncomfortable.', 3, NOW() - INTERVAL '2 days'),
(27, 'trains', 'Moscow', 'Fascinating experience but language barrier.', 3, NOW() - INTERVAL '5 days'),
(28, 'trains', 'Beijing', 'High speed and very efficient.', 5, NOW() - INTERVAL '1 day'),
(29, 'trains', 'Madrid', 'Old equipment but friendly staff.', 3, NOW() - INTERVAL '3 days'),
(30, 'trains', 'Rome', 'Scenic route through countryside.', 4, NOW() - INTERVAL '2 days'),
(31, 'bus', 'Bangalore', 'Seats uncomfortable but good driver.', 3, NOW() - INTERVAL '8 hours'),
(32, 'bus', 'Kuala Lumpur', 'Air conditioning was too strong.', 2, NOW() - INTERVAL '1 day'),
(33, 'bus', 'Las Vegas', 'Party bus was exactly as advertised!', 5, NOW() - INTERVAL '2 days'),
(34, 'bus', 'Mexico City', 'Broken seat made journey painful.', 1, NOW() - INTERVAL '3 days'),
(35, 'bus', 'Toronto', 'Clean and on time.', 4, NOW() - INTERVAL '1 day'),
(36, 'package', 'Bali', 'Well organized but rushed activities.', 4, NOW() - INTERVAL '2 days'),
(37, 'package', 'Maldives', 'Honeymoon package was magical.', 5, NOW() - INTERVAL '3 days'),
(38, 'package', 'Switzerland', 'Ski package had poor equipment.', 2, NOW() - INTERVAL '5 days'),
(39, 'package', 'Egypt', 'Historical tour guide was amazing.', 5, NOW() - INTERVAL '1 day'),
(40, 'package', 'Thailand', 'Too many tourist traps included.', 2, NOW() - INTERVAL '4 days'),
(41, 'package', 'Japan', 'Cherry blossom tour perfect timing.', 5, NOW() - INTERVAL '2 days'),
(42, 'package', 'Peru', 'Machu Picchu hike was strenuous but worth it.', 4, NOW() - INTERVAL '3 days'),
(43, 'package', 'South Africa', 'Safari exceeded expectations.', 5, NOW() - INTERVAL '1 day'),
(44, 'package', 'Greece', 'Island hopping was poorly scheduled.', 3, NOW() - INTERVAL '4 days'),
(45, 'package', 'Vietnam', 'Food tour was highlight of our trip.', 5, NOW() - INTERVAL '2 days'),
(46, 'car_rental', 'Sydney', 'Transparent pricing, smooth process.', 5, NOW() - INTERVAL '1 day'),
(47, 'car_rental', 'Los Angeles', 'Got upgraded to a convertible!', 5, NOW() - INTERVAL '2 days'),
(48, 'car_rental', 'Rome', 'Scratched car led to deposit issues.', 2, NOW() - INTERVAL '3 days'),
(49, 'car_rental', 'Cape Town', 'Perfect car for coastal drive.', 4, NOW() - INTERVAL '1 day'),
(50, 'car_rental', 'Dubai', 'Luxury car at reasonable price.', 5, NOW() - INTERVAL '2 days'),
(51, 'forex', 'London', 'Competitive rates and fast service.', 5, NOW() - INTERVAL '3 hours'),
(52, 'forex', 'Delhi', 'Hidden charges not disclosed upfront.', 2, NOW() - INTERVAL '1 day'),
(53, 'forex', 'Singapore', 'Best exchange rates in the city.', 5, NOW() - INTERVAL '2 days'),
(54, 'forex', 'Dubai', 'Long queue but good service.', 3, NOW() - INTERVAL '1 day'),
(55, 'forex', 'New York', 'Digital process was seamless.', 5, NOW() - INTERVAL '4 hours'),
(56, 'forex', 'Tokyo', 'Staff spoke excellent English.', 4, NOW() - INTERVAL '1 day'),
(57, 'forex', 'Sydney', 'Misquoted rates at counter.', 2, NOW() - INTERVAL '2 days'),
(58, 'forex', 'Paris', 'Quick service with no paperwork.', 5, NOW() - INTERVAL '3 days'),
(59, 'forex', 'Hong Kong', '24/7 service saved our trip.', 5, NOW() - INTERVAL '1 day'),
(60, 'forex', 'Bangkok', 'Rates worse than airport.', 1, NOW() - INTERVAL '4 days'),
(61, 'travel_insurance', 'London', 'Claim process was hassle-free.', 5, NOW() - INTERVAL '2 days'),
(62, 'travel_insurance', 'New York', 'Denied claim for no clear reason.', 1, NOW() - INTERVAL '5 days'),
(63, 'travel_insurance', 'Dubai', 'Covered our medical emergency fully.', 5, NOW() - INTERVAL '1 day'),
(64, 'travel_insurance', 'Singapore', 'Slow response to queries.', 3, NOW() - INTERVAL '3 days'),
(65, 'travel_insurance', 'Tokyo', 'Comprehensive coverage for Japan.', 4, NOW() - INTERVAL '2 days'),
(66, 'travel_insurance', 'Sydney', 'Mobile app made everything easy.', 5, NOW() - INTERVAL '1 day'),
(67, 'travel_insurance', 'Paris', 'Lost baggage claim took 3 weeks.', 2, NOW() - INTERVAL '4 days'),
(68, 'travel_insurance', 'Hong Kong', '24/7 support was invaluable.', 5, NOW() - INTERVAL '2 days'),
(69, 'travel_insurance', 'Delhi', 'Affordable with good coverage.', 4, NOW() - INTERVAL '1 day'),
(70, 'travel_insurance', 'Bangkok', 'Fine print excluded everything.', 1, NOW() - INTERVAL '5 days'),
(71, 'visa', 'London', 'Got my visa in just 2 days!', 5, NOW() - INTERVAL '1 day'),
(72, 'visa', 'New York', 'Document checklist was inaccurate.', 2, NOW() - INTERVAL '3 days'),
(73, 'visa', 'Dubai', 'Smooth process for work visa.', 4, NOW() - INTERVAL '2 days'),
(74, 'visa', 'Singapore', 'Overcharged for express service.', 3, NOW() - INTERVAL '4 days'),
(75, 'visa', 'Tokyo', 'Guide walked me through everything.', 5, NOW() - INTERVAL '1 day'),
(76, 'visa', 'Sydney', 'Visa rejected with no explanation.', 1, NOW() - INTERVAL '5 days'),
(77, 'visa', 'Paris', 'Schengen visa processed quickly.', 5, NOW() - INTERVAL '2 days'),
(78, 'visa', 'Hong Kong', 'Multiple errors in application.', 2, NOW() - INTERVAL '3 days'),
(79, 'visa', 'Delhi', 'US visa interview prep was excellent.', 5, NOW() - INTERVAL '1 day'),
(80, 'visa', 'Bangkok', 'Lost my passport during process.', 1, NOW() - INTERVAL '4 days');


-- =============================================
-- CREATE VIEWS (Only _b views were provided)
-- =============================================

-- Create a view for user behavior summary (references renamed _b tables)
CREATE VIEW user_behavior_summary AS
SELECT
    u.id AS user_id, u.username, u.created_at::date AS signup_date, u.country, u.signup_source, u.device_type,
    COUNT(DISTINCT s.id) AS session_count,
    COALESCE(AVG(NULLIF(EXTRACT(EPOCH FROM (s.session_end - s.session_start)), 0)) FILTER (WHERE s.session_end > s.session_start) / 60.0, 0) AS avg_session_minutes,
    COUNT(DISTINCT e.id) FILTER (WHERE e.event_type LIKE 'book_%' OR e.event_type LIKE '%purchase%') AS total_actions_count,
    COUNT(DISTINCT p.id) FILTER (WHERE p.payment_status = 'completed') AS successful_bookings_count,
    SUM(p.amount) FILTER (WHERE p.payment_status = 'completed') AS total_spent,
    MAX(p.payment_date) FILTER (WHERE p.payment_status = 'completed') AS last_purchase_date,
    (SELECT f_inner.rating FROM user_feedback_b f_inner WHERE f_inner.user_id = u.id ORDER BY f_inner.submitted_at DESC LIMIT 1) AS latest_rating
FROM users_b u
LEFT JOIN sessions_b s ON u.id = s.user_id
LEFT JOIN user_events_b e ON u.id = e.user_id
LEFT JOIN payments_b p ON u.id = p.user_id
GROUP BY u.id, u.username, u.created_at, u.country, u.signup_source, u.device_type;

-- Create a view for booking funnel analysis (references _b tables)
-- NOTE: This funnel logic is simplified. Real funnel analysis often requires more complex session/path tracking.
CREATE VIEW booking_funnel_analysis AS
WITH funnel_steps AS (
    -- Define steps and their corresponding event patterns
    SELECT 1 AS step_order, 'Search' AS step_name, event_type FROM user_events_b WHERE event_type LIKE 'search_%' UNION ALL
    SELECT 2, 'View', event_type FROM user_events_b WHERE event_type LIKE 'view_%' UNION ALL
    SELECT 3, 'Initiate Booking', event_type FROM user_events_b WHERE event_type LIKE 'click_book' OR event_type LIKE 'book_%' UNION ALL -- Combine initiation signals
    SELECT 4, 'Payment Completed', 'payment_completed' FROM payments_b WHERE payment_status = 'completed' -- Use payment status
),
agg_data AS (
    -- Aggregate user counts per step per day
    SELECT
        fs.step_order, fs.step_name,
        COALESCE(e.event_time::date, p.payment_date::date) as event_date,
        COALESCE(e.user_id, p.user_id) as user_id
    FROM funnel_steps fs
    LEFT JOIN user_events_b e ON fs.event_type = e.event_type AND fs.step_order <= 3
    LEFT JOIN payments_b p ON fs.event_type = 'payment_completed' AND fs.step_order = 4 AND p.payment_status = 'completed'
)
SELECT
    step_order, step_name, event_date,
    COUNT(DISTINCT user_id) as unique_users
FROM agg_data
WHERE event_date IS NOT NULL
GROUP BY step_order, step_name, event_date
ORDER BY event_date, step_order;


-- Create a view for device performance (references _b tables)
CREATE VIEW device_performance AS
SELECT
    u.device_type,
    COUNT(DISTINCT u.id) AS total_users,
    COUNT(DISTINCT s.id) AS total_sessions,
    COALESCE(AVG(NULLIF(EXTRACT(EPOCH FROM (s.session_end - s.session_start)), 0)) FILTER (WHERE s.session_end > s.session_start) / 60.0, 0) AS avg_session_minutes,
    COUNT(DISTINCT p.user_id) FILTER (WHERE p.payment_status = 'completed') AS booking_users_count,
    AVG((SELECT f_inner.rating FROM user_feedback_b f_inner WHERE f_inner.user_id = u.id ORDER BY f_inner.submitted_at DESC LIMIT 1)) AS avg_latest_rating,
    CASE WHEN COUNT(DISTINCT u.id) > 0 THEN (COUNT(DISTINCT p.id) FILTER (WHERE p.payment_status = 'completed')::DECIMAL / COUNT(DISTINCT u.id)) * 100 ELSE 0 END AS conversion_rate_percent
FROM users_b u
LEFT JOIN sessions_b s ON u.id = s.user_id
LEFT JOIN payments_b p ON u.id = p.user_id
GROUP BY u.device_type;

-- Create a view for popular destinations (references _b tables)
CREATE VIEW popular_destinations AS
SELECT
    LOWER(metadata ->> 'destination') AS destination,
    COUNT(*) AS search_count,
    COUNT(DISTINCT user_id) AS unique_users_searching
FROM user_events_b
WHERE
    event_type IN ('search_flight', 'search_hotel', 'search_package', 'search_car', 'search_activity')
    AND jsonb_typeof(metadata -> 'destination') = 'string'
    AND metadata ->> 'destination' IS NOT NULL
    AND TRIM(metadata ->> 'destination') <> ''
GROUP BY LOWER(metadata ->> 'destination')
ORDER BY search_count DESC, unique_users_searching DESC
LIMIT 20;


-- Print completion message
SELECT 'Combined (_b, _s, _q) database setup script V5 (PostgreSQL) with unique object names completed successfully!' AS message;